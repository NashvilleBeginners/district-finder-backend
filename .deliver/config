#!/usr/bin/env bash

APP="districts" # name of your release

BUILD_HOST="build.reax.io" # host where to build the release
BUILD_USER="build" # local user at build host
BUILD_AT="/builds/" # build directory on build host
RELEASE_DIR="$BUILD_AT/$APP"
RELEASE_STORE="s3://AKIAI2CSQENKOFJAPRCA@rW0/O7eSJH36Yw95p4KxZZX8SnnZV5q5inb/EfYh:reax"

STAGING_HOSTS="districts-staging.reax.io" # staging / test hosts separated by space
STAGING_USER="test" # local user at staging hosts
TEST_AT="/test/districts" # deploy directory on staging hosts. default is DELIVER_TO

PRODUCTION_HOSTS="52.203.221.247" # deploy / production hosts separated by space
PRODUCTION_USER="districts-app" # local user at deploy hosts
DELIVER_TO="/opt/districts" # deploy directory on production hosts

TARGET_MIX_ENV=prod

AUTO_VERSION="commit-count+git-revision+branch"

pre_erlang_get_and_update_deps() {
  # copy it from the local machine to the build host when builing
  local _local_secret_config_file="apps/$APP/config/prod.secret.exs"
  if [ "$TARGET_MIX_ENV" = "prod" ]; then
    status "Copying '$_local_secret_config_file' file to build host"
    scp "$_local_secret_config_file" "$BUILD_USER@$BUILD_HOST:$BUILD_AT/$APP/config/prod.secret.exs"
  fi
}

pre_erlang_clean_compile() {
  status "Preparing assets with: brunch build and phoenix.digest"
  __sync_remote "
    # runs the commands on the build host
    [ -f ~/.profile ] && source ~/.profile # load profile (optional)

    # fail if any command fails (recommended)
    set -e

    # enter the build directory on the build host (required)
    cd '$BUILD_AT/$APP'

    mkdir -p priv/static # required by the phoenix.digest task

    # installing npm dependencies
    npm install

    # building brunch
    brunch build --production

    # run your custom task
    APP='$APP' MIX_ENV='$TARGET_MIX_ENV' $MIX_CMD phoenix.digest $SILENCE
  "
}
